{"ast":null,"code":"var _jsxFileName = \"/home/majid/smart-pantry/src/components/RecipeSuggestions/RecipeSuggestions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Typography, List, ListItem, ListItemText } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeSuggestions = ({\n  pantryItems\n}) => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n\n  // Fetch recipe suggestions from the Flask backend\n  useEffect(() => {\n    if (pantryItems.length > 0) {\n      console.log(\"Fetching recipe suggestions for pantry items:\", pantryItems);\n\n      // Make a POST request to the Flask backend with the pantry items\n      fetch(\"http://127.0.0.1:5001/recommend\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          pantry: pantryItems\n        })\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        console.log(\"Received recipe recommendations:\", data);\n        setRecipes(data);\n      }).catch(error => console.error(\"Error fetching recipe recommendations:\", error));\n    }\n  }, [pantryItems]); // Re-run the effect when pantryItems changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Recipe Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), recipes.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n      children: recipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `Suggested Recipe: ${recipe.recipe_name}`,\n          secondary: `Ingredients: ${recipe.ingredients}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No recipe suggestions available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeSuggestions, \"xBkrk5r3hhKgEpMO+HGI7yKr/O8=\");\n_c = RecipeSuggestions;\nexport default RecipeSuggestions;\nvar _c;\n$RefreshReg$(_c, \"RecipeSuggestions\");","map":{"version":3,"names":["React","useEffect","useState","Typography","List","ListItem","ListItemText","jsxDEV","_jsxDEV","RecipeSuggestions","pantryItems","_s","recipes","setRecipes","length","console","log","fetch","method","headers","body","JSON","stringify","pantry","then","response","ok","Error","status","json","data","catch","error","style","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","recipe","index","primary","recipe_name","secondary","ingredients","_c","$RefreshReg$"],"sources":["/home/majid/smart-pantry/src/components/RecipeSuggestions/RecipeSuggestions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Typography, List, ListItem, ListItemText } from \"@mui/material\";\n\nconst RecipeSuggestions = ({ pantryItems }) => {\n  const [recipes, setRecipes] = useState([]);\n\n  // Fetch recipe suggestions from the Flask backend\n  useEffect(() => {\n    if (pantryItems.length > 0) {\n      console.log(\"Fetching recipe suggestions for pantry items:\", pantryItems);\n\n      // Make a POST request to the Flask backend with the pantry items\n      fetch(\"http://127.0.0.1:5001/recommend\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ pantry: pantryItems }),\n      })\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n          }\n          return response.json();\n        })\n        .then((data) => {\n          console.log(\"Received recipe recommendations:\", data);\n          setRecipes(data);\n        })\n        .catch((error) => console.error(\"Error fetching recipe recommendations:\", error));\n    }\n  }, [pantryItems]); // Re-run the effect when pantryItems changes\n\n  return (\n    <div style={{ marginTop: \"20px\" }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Recipe Suggestions\n      </Typography>\n      {recipes.length > 0 ? (\n        <List>\n          {recipes.map((recipe, index) => (\n            <ListItem key={index}>\n              <ListItemText\n                primary={`Suggested Recipe: ${recipe.recipe_name}`}\n                secondary={`Ingredients: ${recipe.ingredients}`}\n              />\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <Typography>No recipe suggestions available.</Typography>\n      )}\n    </div>\n  );\n};\n\nexport default RecipeSuggestions;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACAD,SAAS,CAAC,MAAM;IACd,IAAIS,WAAW,CAACI,MAAM,GAAG,CAAC,EAAE;MAC1BC,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAEN,WAAW,CAAC;;MAEzE;MACAO,KAAK,CAAC,iCAAiC,EAAE;QACvCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAEb;QAAY,CAAC;MAC9C,CAAC,CAAC,CACCc,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC;QAC3D;QACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACxB,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAK;QACdf,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEc,IAAI,CAAC;QACrDjB,UAAU,CAACiB,IAAI,CAAC;MAClB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKjB,OAAO,CAACiB,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC,CAAC;IACrF;EACF,CAAC,EAAE,CAACtB,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnB,oBACEF,OAAA;IAAKyB,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAChC3B,OAAA,CAACL,UAAU;MAACiC,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EACZ7B,OAAO,CAACE,MAAM,GAAG,CAAC,gBACjBN,OAAA,CAACJ,IAAI;MAAA+B,QAAA,EACFvB,OAAO,CAAC8B,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBpC,OAAA,CAACH,QAAQ;QAAA8B,QAAA,eACP3B,OAAA,CAACF,YAAY;UACXuC,OAAO,EAAE,qBAAqBF,MAAM,CAACG,WAAW,EAAG;UACnDC,SAAS,EAAE,gBAAgBJ,MAAM,CAACK,WAAW;QAAG;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD;MAAC,GAJWG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,gBAEPjC,OAAA,CAACL,UAAU;MAAAgC,QAAA,EAAC;IAAgC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CACzD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAnDIF,iBAAiB;AAAAwC,EAAA,GAAjBxC,iBAAiB;AAqDvB,eAAeA,iBAAiB;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}