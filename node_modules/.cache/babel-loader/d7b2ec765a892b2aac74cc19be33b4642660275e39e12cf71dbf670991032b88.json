{"ast":null,"code":"var _jsxFileName = \"/home/majid/smart-pantry/src/components/ShoppingList/ShoppingList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Typography, Paper, List, ListItem, ListItemText } from \"@mui/material\";\nimport \"./ShoppingList.css\";\n\n// Define diet-specific required items\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dietItems = {\n  Vegan: [\"tofu\", \"vegetables\", \"fruits\", \"lentils\", \"beans\", \"nuts\", \"seeds\"],\n  Keto: [\"meat\", \"fish\", \"eggs\", \"butter\", \"cheese\", \"avocado\", \"olive oil\"],\n  \"Low-Carb\": [\"meat\", \"fish\", \"eggs\", \"leafy greens\", \"nuts\", \"berries\"],\n  None: [] // No specific items for \"None\" diet\n};\nconst ShoppingList = ({\n  pantryItems,\n  dietPreferences\n}) => {\n  _s();\n  const [shoppingList, setShoppingList] = useState([]);\n\n  // Generate shopping list based on missing items from the pantry\n  useEffect(() => {\n    const generateShoppingList = () => {\n      const requiredItems = dietItems[dietPreferences.diet] || []; // Get items based on diet\n\n      // Compare the required diet items with pantry items\n      const missingItems = requiredItems.filter(item => {\n        // Check if the pantry does not have the item\n        return !pantryItems.some(pantryItem => pantryItem.name && pantryItem.name.toLowerCase() === item.toLowerCase());\n      });\n      setShoppingList(missingItems); // Update the missing items list\n    };\n    generateShoppingList();\n  }, [pantryItems, dietPreferences]); // Re-run if pantryItems or dietPreferences change\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Shopping List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Based on your \", dietPreferences.diet, \" diet, here are the items you are missing:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: shoppingList.length > 0 ? shoppingList.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"No items needed. You're all set!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Complete Shopping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ShoppingList, \"ZpoVxrdRlZRaBRF0F7wrOsnRATM=\");\n_c = ShoppingList;\nexport default ShoppingList;\nvar _c;\n$RefreshReg$(_c, \"ShoppingList\");","map":{"version":3,"names":["React","useState","useEffect","Button","Typography","Paper","List","ListItem","ListItemText","jsxDEV","_jsxDEV","dietItems","Vegan","Keto","None","ShoppingList","pantryItems","dietPreferences","_s","shoppingList","setShoppingList","generateShoppingList","requiredItems","diet","missingItems","filter","item","some","pantryItem","name","toLowerCase","elevation","style","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","primary","color","_c","$RefreshReg$"],"sources":["/home/majid/smart-pantry/src/components/ShoppingList/ShoppingList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Typography, Paper, List, ListItem, ListItemText } from \"@mui/material\";\nimport \"./ShoppingList.css\";\n\n// Define diet-specific required items\nconst dietItems = {\n  Vegan: [\"tofu\", \"vegetables\", \"fruits\", \"lentils\", \"beans\", \"nuts\", \"seeds\"],\n  Keto: [\"meat\", \"fish\", \"eggs\", \"butter\", \"cheese\", \"avocado\", \"olive oil\"],\n  \"Low-Carb\": [\"meat\", \"fish\", \"eggs\", \"leafy greens\", \"nuts\", \"berries\"],\n  None: [], // No specific items for \"None\" diet\n};\n\nconst ShoppingList = ({ pantryItems, dietPreferences }) => {\n  const [shoppingList, setShoppingList] = useState([]);\n\n  // Generate shopping list based on missing items from the pantry\n  useEffect(() => {\n    const generateShoppingList = () => {\n      const requiredItems = dietItems[dietPreferences.diet] || []; // Get items based on diet\n\n      // Compare the required diet items with pantry items\n      const missingItems = requiredItems.filter((item) => {\n        // Check if the pantry does not have the item\n        return !pantryItems.some(\n          (pantryItem) => pantryItem.name && pantryItem.name.toLowerCase() === item.toLowerCase()\n        );\n      });\n\n      setShoppingList(missingItems); // Update the missing items list\n    };\n\n    generateShoppingList();\n  }, [pantryItems, dietPreferences]); // Re-run if pantryItems or dietPreferences change\n\n  return (\n    <Paper elevation={3} style={{ padding: \"20px\" }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Shopping List\n      </Typography>\n      <Typography>\n        Based on your {dietPreferences.diet} diet, here are the items you are missing:\n      </Typography>\n      <List>\n        {shoppingList.length > 0 ? (\n          shoppingList.map((item, index) => (\n            <ListItem key={index}>\n              <ListItemText primary={item} />\n            </ListItem>\n          ))\n        ) : (\n          <ListItem>\n            <ListItemText primary=\"No items needed. You're all set!\" />\n          </ListItem>\n        )}\n      </List>\n      <Button variant=\"contained\" color=\"primary\">\n        Complete Shopping\n      </Button>\n    </Paper>\n  );\n};\n\nexport default ShoppingList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}