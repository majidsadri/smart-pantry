{"ast":null,"code":"var _jsxFileName = \"/home/majid/smart-pantry/src/components/Pantry/Pantry.js\",\n  _s = $RefreshSig$();\n// Pantry.js\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, TextField, Button, List, ListItem, ListItemText, Paper } from \"@mui/material\";\nimport \"./Pantry.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pantry = ({\n  updatePantryItems\n}) => {\n  _s();\n  const [items, setItems] = useState([]); // Start with an empty array\n  const [newItem, setNewItem] = useState(\"\"); // State for the new item input\n\n  // Fetch items from the backend when the component mounts\n  useEffect(() => {\n    fetch(\"http://localhost:5000/pantry\").then(response => response.json()).then(data => {\n      console.log(\"Fetched pantry items:\", data);\n      setItems(data || []); // Ensure data is always an array\n      updatePantryItems(data || []); // Pass the items to the parent (App.js)\n    }).catch(error => console.error(\"Error fetching pantry items:\", error));\n  }, [updatePantryItems]);\n\n  // Add a new item to the pantry and update the backend\n  const addItem = () => {\n    if (newItem.trim()) {\n      const item = {\n        name: newItem,\n        category: \"Uncategorized\"\n      };\n      fetch(\"http://localhost:5000/pantry\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(item)\n      }).then(response => response.json()).then(newItem => {\n        const updatedItems = [...items, newItem];\n        setItems(updatedItems);\n        updatePantryItems(updatedItems); // Update the parent with the new list\n      }).catch(error => console.error(\"Error adding pantry item:\", error));\n      setNewItem(\"\"); // Clear the input field after adding\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: \"pantry-container\",\n    elevation: 3,\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Pantry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        label: \"Add item to pantry\",\n        value: newItem,\n        onChange: e => setNewItem(e.target.value),\n        style: {\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: addItem,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Current Pantry Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Pantry, \"VUz1wnsMRHat3b5wnqB/zPlgFv4=\");\n_c = Pantry;\nexport default Pantry;\nvar _c;\n$RefreshReg$(_c, \"Pantry\");","map":{"version":3,"names":["React","useState","useEffect","Typography","TextField","Button","List","ListItem","ListItemText","Paper","jsxDEV","_jsxDEV","Pantry","updatePantryItems","_s","items","setItems","newItem","setNewItem","fetch","then","response","json","data","console","log","catch","error","addItem","trim","item","name","category","method","headers","body","JSON","stringify","updatedItems","className","elevation","style","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","label","value","onChange","e","target","marginRight","color","onClick","map","index","primary","_c","$RefreshReg$"],"sources":["/home/majid/smart-pantry/src/components/Pantry/Pantry.js"],"sourcesContent":["// Pantry.js\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, TextField, Button, List, ListItem, ListItemText, Paper } from \"@mui/material\";\nimport \"./Pantry.css\";\n\nconst Pantry = ({ updatePantryItems }) => {\n  const [items, setItems] = useState([]); // Start with an empty array\n  const [newItem, setNewItem] = useState(\"\"); // State for the new item input\n\n  // Fetch items from the backend when the component mounts\n  useEffect(() => {\n    fetch(\"http://localhost:5000/pantry\")\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Fetched pantry items:\", data);\n        setItems(data || []); // Ensure data is always an array\n        updatePantryItems(data || []); // Pass the items to the parent (App.js)\n      })\n      .catch((error) => console.error(\"Error fetching pantry items:\", error));\n  }, [updatePantryItems]);\n\n  // Add a new item to the pantry and update the backend\n  const addItem = () => {\n    if (newItem.trim()) {\n      const item = { name: newItem, category: \"Uncategorized\" };\n      fetch(\"http://localhost:5000/pantry\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(item),\n      })\n        .then((response) => response.json())\n        .then((newItem) => {\n          const updatedItems = [...items, newItem];\n          setItems(updatedItems);\n          updatePantryItems(updatedItems); // Update the parent with the new list\n        })\n        .catch((error) => console.error(\"Error adding pantry item:\", error));\n      setNewItem(\"\"); // Clear the input field after adding\n    }\n  };\n\n  return (\n    <Paper className=\"pantry-container\" elevation={3} style={{ padding: \"20px\" }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Pantry\n      </Typography>\n      <div style={{ marginBottom: \"20px\" }}>\n        <TextField\n          variant=\"outlined\"\n          label=\"Add item to pantry\"\n          value={newItem}\n          onChange={(e) => setNewItem(e.target.value)}\n          style={{ marginRight: \"10px\" }}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={addItem}>\n          Add\n        </Button>\n      </div>\n      <Typography variant=\"h6\">Current Pantry Items</Typography>\n      <List>\n        {items.map((item, index) => (\n          <ListItem key={index}>\n            <ListItemText primary={item.name} />\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n};\n\nexport default Pantry;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}