{"ast":null,"code":"var _jsxFileName = \"/home/majid/smart-pantry/src/components/RecipeSuggestions/RecipeSuggestions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Typography, CircularProgress, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeSuggestions = ({\n  pantryItems,\n  dietPreferences\n}) => {\n  _s();\n  const [recipes, setRecipes] = useState([]); // Store all the recipes\n  const [currentRecipeIndex, setCurrentRecipeIndex] = useState(0); // Track current recipe\n  const [loading, setLoading] = useState(false);\n  const [previousPantryItems, setPreviousPantryItems] = useState([]); // Store previous pantry items to avoid refetching\n\n  const isFirstRender = useRef(true); // To handle initial render\n\n  useEffect(() => {\n    if (JSON.stringify(pantryItems) === JSON.stringify(previousPantryItems)) return;\n    if (pantryItems.length > 0) {\n      setPreviousPantryItems(pantryItems);\n      fetchSuggestions(pantryItems, dietPreferences);\n    }\n  }, [pantryItems, previousPantryItems, dietPreferences]);\n  const fetchSuggestions = (pantryItems, dietPreferences) => {\n    setLoading(true);\n    console.log(\"Fetching suggestions with pantry items:\", pantryItems, \"and diet preferences:\", dietPreferences);\n    fetch(\"http://127.0.0.1:5001/recommend\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        pantry: pantryItems,\n        diet: dietPreferences.diet,\n        restrictions: dietPreferences.restrictions\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"Received data:\", data);\n      if (data.suggestions && data.suggestions.length > 0) {\n        setRecipes(data.suggestions);\n        setCurrentRecipeIndex(0); // Reset to the first recipe only when new recipes are fetched\n      } else {\n        setRecipes([\"No recipe suggestions available.\"]);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching recipe suggestions:\", error);\n      setRecipes([\"Error generating suggestions.\"]);\n    }).finally(() => {\n      setLoading(false); // Stop loading after fetch completes\n    });\n  };\n  const handleLike = () => {\n    alert(\"You liked the recipe!\");\n  };\n  const handleDislike = () => {\n    if (currentRecipeIndex < recipes.length - 1) {\n      setCurrentRecipeIndex(currentRecipeIndex + 1); // Show the next recipe\n    } else {\n      alert(\"No more recipes to show.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Recipe Suggestions from ChatGPT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : recipes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          fontWeight: \"bold\",\n          color: \"#3f51b5\"\n        },\n        children: recipes[currentRecipeIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            marginRight: \"10px\"\n          },\n          onClick: handleLike,\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleDislike,\n          children: \"Dislike\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No recipe suggestions available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeSuggestions, \"P9KNAKaPE5fHX+M0bxG/CFg/nHY=\");\n_c = RecipeSuggestions;\nexport default RecipeSuggestions;\nvar _c;\n$RefreshReg$(_c, \"RecipeSuggestions\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Typography","CircularProgress","Button","jsxDEV","_jsxDEV","RecipeSuggestions","pantryItems","dietPreferences","_s","recipes","setRecipes","currentRecipeIndex","setCurrentRecipeIndex","loading","setLoading","previousPantryItems","setPreviousPantryItems","isFirstRender","JSON","stringify","length","fetchSuggestions","console","log","fetch","method","headers","body","pantry","diet","restrictions","then","response","ok","Error","status","json","data","suggestions","catch","error","finally","handleLike","alert","handleDislike","style","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","fontWeight","color","marginRight","onClick","_c","$RefreshReg$"],"sources":["/home/majid/smart-pantry/src/components/RecipeSuggestions/RecipeSuggestions.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { Typography, CircularProgress, Button } from \"@mui/material\";\n\nconst RecipeSuggestions = ({ pantryItems, dietPreferences }) => {\n  const [recipes, setRecipes] = useState([]); // Store all the recipes\n  const [currentRecipeIndex, setCurrentRecipeIndex] = useState(0); // Track current recipe\n  const [loading, setLoading] = useState(false);\n  const [previousPantryItems, setPreviousPantryItems] = useState([]); // Store previous pantry items to avoid refetching\n\n  const isFirstRender = useRef(true); // To handle initial render\n\n  useEffect(() => {\n    if (JSON.stringify(pantryItems) === JSON.stringify(previousPantryItems)) return;\n\n    if (pantryItems.length > 0) {\n      setPreviousPantryItems(pantryItems);\n      fetchSuggestions(pantryItems, dietPreferences);\n    }\n  }, [pantryItems, previousPantryItems, dietPreferences]);\n\n  const fetchSuggestions = (pantryItems, dietPreferences) => {\n    setLoading(true);\n    console.log(\"Fetching suggestions with pantry items:\", pantryItems, \"and diet preferences:\", dietPreferences);\n\n    fetch(\"http://127.0.0.1:5001/recommend\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        pantry: pantryItems,\n        diet: dietPreferences.diet,\n        restrictions: dietPreferences.restrictions,\n      }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log(\"Received data:\", data);\n        if (data.suggestions && data.suggestions.length > 0) {\n          setRecipes(data.suggestions);\n          setCurrentRecipeIndex(0); // Reset to the first recipe only when new recipes are fetched\n        } else {\n          setRecipes([\"No recipe suggestions available.\"]);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching recipe suggestions:\", error);\n        setRecipes([\"Error generating suggestions.\"]);\n      })\n      .finally(() => {\n        setLoading(false); // Stop loading after fetch completes\n      });\n  };\n\n  const handleLike = () => {\n    alert(\"You liked the recipe!\");\n  };\n\n  const handleDislike = () => {\n    if (currentRecipeIndex < recipes.length - 1) {\n      setCurrentRecipeIndex(currentRecipeIndex + 1); // Show the next recipe\n    } else {\n      alert(\"No more recipes to show.\");\n    }\n  };\n\n  return (\n    <div style={{ marginTop: \"20px\" }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Recipe Suggestions from ChatGPT\n      </Typography>\n\n      {loading ? (\n        <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n          <CircularProgress />\n        </div>\n      ) : recipes.length > 0 ? (\n        <div>\n          <Typography variant=\"h6\" style={{ fontWeight: \"bold\", color: \"#3f51b5\" }}>\n            {recipes[currentRecipeIndex]}\n          </Typography>\n          <div style={{ marginTop: \"20px\" }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginRight: \"10px\" }}\n              onClick={handleLike}\n            >\n              Like\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={handleDislike}\n            >\n              Dislike\n            </Button>\n          </div>\n        </div>\n      ) : (\n        <Typography>No recipe suggestions available.</Typography>\n      )}\n    </div>\n  );\n};\n\nexport default RecipeSuggestions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}