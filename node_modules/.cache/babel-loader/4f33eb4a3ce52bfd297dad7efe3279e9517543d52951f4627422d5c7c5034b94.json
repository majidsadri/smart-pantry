{"ast":null,"code":"var _jsxFileName = \"/home/majid/smart-pantry/src/components/RecipeSuggestions/RecipeSuggestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Typography, CircularProgress, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeSuggestions = ({\n  pantryItems\n}) => {\n  _s();\n  var _recipes$currentRecip, _recipes$currentRecip2;\n  const [recipes, setRecipes] = useState([]);\n  const [currentRecipeIndex, setCurrentRecipeIndex] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  // Function to fetch recipe suggestions\n  const fetchSuggestions = () => {\n    setLoading(true);\n\n    // Get saved diet preferences from localStorage\n    const savedDietPreferences = JSON.parse(localStorage.getItem(\"dietPreferences\")) || {\n      diet: \"None\",\n      restrictions: \"\"\n    };\n    fetch(\"http://127.0.0.1:5001/recommend\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        pantry: pantryItems,\n        diet: savedDietPreferences.diet,\n        restrictions: savedDietPreferences.restrictions\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.suggestions && data.suggestions.length > 0) {\n        const filteredRecipes = data.suggestions.filter(recipe => {\n          if (savedDietPreferences.diet === \"Vegan\") {\n            return !recipe.title.toLowerCase().includes(\"salmon\") && !recipe.title.toLowerCase().includes(\"meat\") && !recipe.title.toLowerCase().includes(\"cheese\");\n          }\n          return true;\n        });\n        setRecipes(filteredRecipes.length > 0 ? filteredRecipes : [{\n          title: \"No recipe suggestions available\",\n          instructions: \"\"\n        }]);\n        setCurrentRecipeIndex(0);\n      } else {\n        setRecipes([{\n          title: \"No recipe suggestions available\",\n          instructions: \"\"\n        }]);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching recipe suggestions:\", error);\n      setRecipes([{\n        title: \"Error generating suggestions\",\n        instructions: \"\"\n      }]);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: fetchSuggestions,\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: \"Suggest me a recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Recipe Suggestions from you!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : recipes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          fontWeight: \"bold\",\n          color: \"#3f51b5\"\n        },\n        children: (_recipes$currentRecip = recipes[currentRecipeIndex]) === null || _recipes$currentRecip === void 0 ? void 0 : _recipes$currentRecip.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          whiteSpace: \"pre-line\",\n          marginTop: \"10px\"\n        },\n        children: (_recipes$currentRecip2 = recipes[currentRecipeIndex]) === null || _recipes$currentRecip2 === void 0 ? void 0 : _recipes$currentRecip2.instructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No recipe suggestions available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeSuggestions, \"MNXanV+9Tdqv+kllHv3UgY92oj8=\");\n_c = RecipeSuggestions;\nexport default RecipeSuggestions;\nvar _c;\n$RefreshReg$(_c, \"RecipeSuggestions\");","map":{"version":3,"names":["React","useState","Typography","CircularProgress","Button","jsxDEV","_jsxDEV","RecipeSuggestions","pantryItems","_s","_recipes$currentRecip","_recipes$currentRecip2","recipes","setRecipes","currentRecipeIndex","setCurrentRecipeIndex","loading","setLoading","fetchSuggestions","savedDietPreferences","JSON","parse","localStorage","getItem","diet","restrictions","fetch","method","headers","body","stringify","pantry","then","response","json","data","suggestions","length","filteredRecipes","filter","recipe","title","toLowerCase","includes","instructions","catch","error","console","finally","style","marginTop","children","variant","color","onClick","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","gutterBottom","fontWeight","whiteSpace","_c","$RefreshReg$"],"sources":["/home/majid/smart-pantry/src/components/RecipeSuggestions/RecipeSuggestions.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Typography, CircularProgress, Button } from \"@mui/material\";\n\nconst RecipeSuggestions = ({ pantryItems }) => {\n  const [recipes, setRecipes] = useState([]); \n  const [currentRecipeIndex, setCurrentRecipeIndex] = useState(0); \n  const [loading, setLoading] = useState(false);\n\n  // Function to fetch recipe suggestions\n  const fetchSuggestions = () => {\n    setLoading(true);\n    \n    // Get saved diet preferences from localStorage\n    const savedDietPreferences = JSON.parse(localStorage.getItem(\"dietPreferences\")) || { diet: \"None\", restrictions: \"\" };\n\n    fetch(\"http://127.0.0.1:5001/recommend\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        pantry: pantryItems,\n        diet: savedDietPreferences.diet,\n        restrictions: savedDietPreferences.restrictions,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.suggestions && data.suggestions.length > 0) {\n          const filteredRecipes = data.suggestions.filter((recipe) => {\n            if (savedDietPreferences.diet === \"Vegan\") {\n              return !recipe.title.toLowerCase().includes(\"salmon\") && !recipe.title.toLowerCase().includes(\"meat\") && !recipe.title.toLowerCase().includes(\"cheese\");\n            }\n            return true;\n          });\n\n          setRecipes(filteredRecipes.length > 0 ? filteredRecipes : [{ title: \"No recipe suggestions available\", instructions: \"\" }]);\n          setCurrentRecipeIndex(0); \n        } else {\n          setRecipes([{ title: \"No recipe suggestions available\", instructions: \"\" }]);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching recipe suggestions:\", error);\n        setRecipes([{ title: \"Error generating suggestions\", instructions: \"\" }]); \n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div style={{ marginTop: \"20px\" }}>\n      <Button variant=\"contained\" color=\"primary\" onClick={fetchSuggestions} style={{ marginBottom: \"20px\" }}>\n        Suggest me a recipe\n      </Button>\n\n      <Typography variant=\"h5\" gutterBottom>\n        Recipe Suggestions from you!\n      </Typography>\n\n      {loading ? (\n        <CircularProgress />\n      ) : recipes.length > 0 ? (\n        <div>\n          <Typography variant=\"h6\" style={{ fontWeight: \"bold\", color: \"#3f51b5\" }}>\n            {recipes[currentRecipeIndex]?.title}\n          </Typography>\n          <Typography variant=\"body1\" style={{ whiteSpace: \"pre-line\", marginTop: \"10px\" }}>\n            {recipes[currentRecipeIndex]?.instructions}\n          </Typography>\n        </div>\n      ) : (\n        <Typography>No recipe suggestions available.</Typography>\n      )}\n    </div>\n  );\n};\n\nexport default RecipeSuggestions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}