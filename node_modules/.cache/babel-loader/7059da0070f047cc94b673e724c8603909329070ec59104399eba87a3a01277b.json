{"ast":null,"code":"var _jsxFileName = \"/home/majid/smart-pantry/src/components/Ingredients/Ingredients.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Paper, Typography, FormControl, InputLabel, Select, MenuItem, Chip, Grid } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Ingredients = ({\n  pantryItems\n}) => {\n  _s();\n  const [selectedItems, setSelectedItems] = useState([]);\n  const handleSelectChange = event => {\n    setSelectedItems(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Select Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), pantryItems && pantryItems.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Select Pantry Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          multiple: true,\n          value: selectedItems,\n          onChange: handleSelectChange,\n          renderValue: selected => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n              label: value,\n              style: {\n                marginRight: \"5px\"\n              }\n            }, value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this),\n          children: pantryItems.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: `${item.name} (${item.amount} ${item.measurement})`,\n            children: [item.name, \" (\", item.amount, \" \", item.measurement, \")\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          marginTop: \"20px\"\n        },\n        children: \"Selected Ingredients:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), selectedItems.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: selectedItems.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            label: item,\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No ingredients selected.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No pantry items available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Ingredients, \"tcTDBxdHCoS/ruNL27SUc7saNmM=\");\n_c = Ingredients;\nexport default Ingredients;\nvar _c;\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"names":["React","useState","Paper","Typography","FormControl","InputLabel","Select","MenuItem","Chip","Grid","jsxDEV","_jsxDEV","Fragment","_Fragment","Ingredients","pantryItems","_s","selectedItems","setSelectedItems","handleSelectChange","event","target","value","elevation","style","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","length","fullWidth","marginBottom","multiple","onChange","renderValue","selected","map","label","marginRight","item","index","name","amount","measurement","marginTop","container","spacing","color","_c","$RefreshReg$"],"sources":["/home/majid/smart-pantry/src/components/Ingredients/Ingredients.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Paper,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Chip,\n  Grid,\n} from \"@mui/material\";\n\nconst Ingredients = ({ pantryItems }) => {\n  const [selectedItems, setSelectedItems] = useState([]);\n\n  const handleSelectChange = (event) => {\n    setSelectedItems(event.target.value);\n  };\n\n  return (\n    <Paper elevation={3} style={{ padding: \"20px\" }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Select Ingredients\n      </Typography>\n\n      {pantryItems && pantryItems.length > 0 ? (\n        <>\n          <FormControl fullWidth style={{ marginBottom: \"20px\" }}>\n            <InputLabel>Select Pantry Items</InputLabel>\n            <Select\n              multiple\n              value={selectedItems}\n              onChange={handleSelectChange}\n              renderValue={(selected) => (\n                <div>\n                  {selected.map((value) => (\n                    <Chip key={value} label={value} style={{ marginRight: \"5px\" }} />\n                  ))}\n                </div>\n              )}\n            >\n              {pantryItems.map((item, index) => (\n                <MenuItem key={index} value={`${item.name} (${item.amount} ${item.measurement})`}>\n                  {item.name} ({item.amount} {item.measurement})\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <Typography variant=\"h6\" style={{ marginTop: \"20px\" }}>\n            Selected Ingredients:\n          </Typography>\n          {selectedItems.length > 0 ? (\n            <Grid container spacing={1}>\n              {selectedItems.map((item, index) => (\n                <Grid item key={index}>\n                  <Chip label={item} color=\"primary\" />\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Typography>No ingredients selected.</Typography>\n          )}\n        </>\n      ) : (\n        <Typography>No pantry items available.</Typography>\n      )}\n    </Paper>\n  );\n};\n\nexport default Ingredients;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}