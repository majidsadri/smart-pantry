{"ast":null,"code":"var _jsxFileName = \"/home/majid/smart-pantry/src/components/RecipeSuggestions/RecipeSuggestions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Typography, CircularProgress, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecipeSuggestions = ({\n  pantryItems\n}) => {\n  _s();\n  const [recipes, setRecipes] = useState([]); // Store all the recipes\n  const [currentRecipeIndex, setCurrentRecipeIndex] = useState(0); // Track current recipe\n  const [loading, setLoading] = useState(false);\n  const [previousPantryItems, setPreviousPantryItems] = useState([]); // Store previous pantry items to avoid refetching\n\n  const isFirstRender = useRef(true); // To handle initial render\n\n  useEffect(() => {\n    if (JSON.stringify(pantryItems) === JSON.stringify(previousPantryItems)) return;\n    if (pantryItems.length > 0) {\n      setPreviousPantryItems(pantryItems);\n      fetchSuggestions(pantryItems);\n    }\n  }, [pantryItems, previousPantryItems]);\n  const fetchSuggestions = pantryItems => {\n    setLoading(true);\n    console.log(\"Fetching suggestions with pantry items:\", pantryItems);\n    fetch(\"http://127.0.0.1:5001/recommend\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        pantry: pantryItems\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"Received data:\", data);\n      if (data.suggestions && data.suggestions.length > 0) {\n        setRecipes(data.suggestions);\n        setCurrentRecipeIndex(0); // Reset to the first recipe only when new recipes are fetched\n      } else {\n        setRecipes([\"No recipe suggestions available.\"]);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching recipe suggestions:\", error);\n      setRecipes([\"Error generating suggestions.\"]);\n    }).finally(() => {\n      setLoading(false); // Stop loading after fetch completes\n    });\n  };\n  const handleLike = () => {\n    alert(\"You liked the recipe!\");\n  };\n  const handleDislike = () => {\n    if (currentRecipeIndex < recipes.length - 1) {\n      setCurrentRecipeIndex(currentRecipeIndex + 1); // Show the next recipe\n    } else {\n      alert(\"No more recipes to show.\");\n    }\n  };\n\n  // Split the recipe string into title and instructions\n  const getRecipeTitleAndInstructions = recipe => {\n    const lines = recipe.split(\"\\n\");\n    const title = lines[0]; // First line as title\n    const instructions = lines.slice(1).join(\"\\n\"); // Rest as instructions\n    return {\n      title,\n      instructions\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Recipe Suggestions from ChatGPT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : recipes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [recipes[currentRecipeIndex] && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: (() => {\n          const {\n            title,\n            instructions\n          } = getRecipeTitleAndInstructions(recipes[currentRecipeIndex]);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              style: {\n                fontWeight: \"bold\",\n                color: \"#3f51b5\"\n              },\n              children: [title, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              style: {\n                whiteSpace: \"pre-line\"\n              },\n              children: [instructions, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true);\n        })()\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            marginRight: \"10px\"\n          },\n          onClick: handleLike,\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleDislike,\n          children: \"Dislike\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No recipe suggestions available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeSuggestions, \"P9KNAKaPE5fHX+M0bxG/CFg/nHY=\");\n_c = RecipeSuggestions;\nexport default RecipeSuggestions;\nvar _c;\n$RefreshReg$(_c, \"RecipeSuggestions\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Typography","CircularProgress","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","RecipeSuggestions","pantryItems","_s","recipes","setRecipes","currentRecipeIndex","setCurrentRecipeIndex","loading","setLoading","previousPantryItems","setPreviousPantryItems","isFirstRender","JSON","stringify","length","fetchSuggestions","console","log","fetch","method","headers","body","pantry","then","response","ok","Error","status","json","data","suggestions","catch","error","finally","handleLike","alert","handleDislike","getRecipeTitleAndInstructions","recipe","lines","split","title","instructions","slice","join","style","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","fontWeight","color","whiteSpace","marginRight","onClick","_c","$RefreshReg$"],"sources":["/home/majid/smart-pantry/src/components/RecipeSuggestions/RecipeSuggestions.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { Typography, CircularProgress, Button } from \"@mui/material\";\n\nconst RecipeSuggestions = ({ pantryItems }) => {\n  const [recipes, setRecipes] = useState([]); // Store all the recipes\n  const [currentRecipeIndex, setCurrentRecipeIndex] = useState(0); // Track current recipe\n  const [loading, setLoading] = useState(false);\n  const [previousPantryItems, setPreviousPantryItems] = useState([]); // Store previous pantry items to avoid refetching\n\n  const isFirstRender = useRef(true); // To handle initial render\n\n  useEffect(() => {\n    if (JSON.stringify(pantryItems) === JSON.stringify(previousPantryItems)) return;\n\n    if (pantryItems.length > 0) {\n      setPreviousPantryItems(pantryItems);\n      fetchSuggestions(pantryItems);\n    }\n  }, [pantryItems, previousPantryItems]);\n\n  const fetchSuggestions = (pantryItems) => {\n    setLoading(true);\n    console.log(\"Fetching suggestions with pantry items:\", pantryItems);\n\n    fetch(\"http://127.0.0.1:5001/recommend\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ pantry: pantryItems }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log(\"Received data:\", data);\n        if (data.suggestions && data.suggestions.length > 0) {\n          setRecipes(data.suggestions);\n          setCurrentRecipeIndex(0); // Reset to the first recipe only when new recipes are fetched\n        } else {\n          setRecipes([\"No recipe suggestions available.\"]);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching recipe suggestions:\", error);\n        setRecipes([\"Error generating suggestions.\"]);\n      })\n      .finally(() => {\n        setLoading(false); // Stop loading after fetch completes\n      });\n  };\n\n  const handleLike = () => {\n    alert(\"You liked the recipe!\");\n  };\n\n  const handleDislike = () => {\n    if (currentRecipeIndex < recipes.length - 1) {\n      setCurrentRecipeIndex(currentRecipeIndex + 1); // Show the next recipe\n    } else {\n      alert(\"No more recipes to show.\");\n    }\n  };\n\n  // Split the recipe string into title and instructions\n  const getRecipeTitleAndInstructions = (recipe) => {\n    const lines = recipe.split(\"\\n\");\n    const title = lines[0]; // First line as title\n    const instructions = lines.slice(1).join(\"\\n\"); // Rest as instructions\n    return { title, instructions };\n  };\n\n  return (\n    <div style={{ marginTop: \"20px\" }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Recipe Suggestions from ChatGPT\n      </Typography>\n\n      {loading ? (\n        <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n          <CircularProgress />\n        </div>\n      ) : recipes.length > 0 ? (\n        <div>\n          {/* Extract title and instructions from the current recipe */}\n          {recipes[currentRecipeIndex] && (\n            <>\n              {(() => {\n                const { title, instructions } = getRecipeTitleAndInstructions(\n                  recipes[currentRecipeIndex]\n                );\n                return (\n                  <>\n                    <Typography variant=\"h6\" style={{ fontWeight: \"bold\", color: \"#3f51b5\" }}>\n                      {title} {/* Bold and styled title */}\n                    </Typography>\n                    <Typography variant=\"body1\" style={{ whiteSpace: \"pre-line\" }}>\n                      {instructions} {/* Instructions displayed nicely */}\n                    </Typography>\n                  </>\n                );\n              })()}\n            </>\n          )}\n          <div style={{ marginTop: \"20px\" }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginRight: \"10px\" }}\n              onClick={handleLike}\n            >\n              Like\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={handleDislike}\n            >\n              Dislike\n            </Button>\n          </div>\n        </div>\n      ) : (\n        <Typography>No recipe suggestions available.</Typography>\n      )}\n    </div>\n  );\n};\n\nexport default RecipeSuggestions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}