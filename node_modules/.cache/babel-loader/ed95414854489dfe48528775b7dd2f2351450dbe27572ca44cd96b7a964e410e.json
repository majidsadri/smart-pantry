{"ast":null,"code":"var _jsxFileName = \"/home/majid/smart-pantry/src/components/Pantry/AddItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Grid, Typography } from \"@mui/material\";\nimport \"./Pantry.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PEXELS_API_KEY = \"CqDXEkdz6MLbZaaVCye7GioUsuRrVaG2ATmIFeNHX3EF2o4gbpOPERao\"; // Replace with your Pexels API key\n\nconst AddItem = ({\n  addItem\n}) => {\n  _s();\n  const [itemName, setItemName] = useState(\"\");\n  const [itemAmount, setItemAmount] = useState(\"\"); // State for amount\n  const [images, setImages] = useState([]); // State to hold images\n  const [selectedImage, setSelectedImage] = useState(\"\"); // State for the selected image\n\n  const fetchImages = async query => {\n    const response = await fetch(`https://api.pexels.com/v1/search?query=${query}&per_page=10`, {\n      headers: {\n        Authorization: PEXELS_API_KEY\n      }\n    });\n    const data = await response.json();\n    setImages(data.photos);\n  };\n  useEffect(() => {\n    if (itemName) {\n      fetchImages(itemName); // Fetch images when the item name is updated\n    }\n  }, [itemName]);\n  const handleAdd = () => {\n    if (itemName.trim() && itemAmount.trim() && selectedImage) {\n      const newItem = {\n        name: itemName,\n        amount: itemAmount,\n        category: \"Uncategorized\",\n        image: selectedImage\n      };\n      addItem(newItem);\n      setItemName(\"\");\n      setItemAmount(\"\"); // Clear after adding\n      setSelectedImage(\"\"); // Clear selected image\n      setImages([]); // Clear images\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-item\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"outlined\",\n      label: \"Add item to pantry\",\n      value: itemName,\n      onChange: e => setItemName(e.target.value),\n      style: {\n        marginRight: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"outlined\",\n      label: \"Amount\",\n      value: itemAmount,\n      onChange: e => setItemAmount(e.target.value),\n      style: {\n        marginRight: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleAdd,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      style: {\n        marginTop: \"20px\"\n      },\n      children: \"Select an Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: images.map(image => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.src.small,\n          alt: image.alt,\n          style: {\n            cursor: \"pointer\",\n            width: \"100%\",\n            borderRadius: \"8px\",\n            border: selectedImage === image.src.small ? '2px solid blue' : 'none'\n          },\n          onClick: () => setSelectedImage(image.src.small)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AddItem, \"V3OkK0I/3QdKKLLKDaknjaSZjTg=\");\n_c = AddItem;\nexport default AddItem;\nvar _c;\n$RefreshReg$(_c, \"AddItem\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Grid","Typography","jsxDEV","_jsxDEV","PEXELS_API_KEY","AddItem","addItem","_s","itemName","setItemName","itemAmount","setItemAmount","images","setImages","selectedImage","setSelectedImage","fetchImages","query","response","fetch","headers","Authorization","data","json","photos","handleAdd","trim","newItem","name","amount","category","image","className","children","variant","label","value","onChange","e","target","style","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","marginTop","container","spacing","map","item","xs","src","small","alt","cursor","width","borderRadius","border","id","_c","$RefreshReg$"],"sources":["/home/majid/smart-pantry/src/components/Pantry/AddItem.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Grid, Typography } from \"@mui/material\";\nimport \"./Pantry.css\";\n\nconst PEXELS_API_KEY = \"CqDXEkdz6MLbZaaVCye7GioUsuRrVaG2ATmIFeNHX3EF2o4gbpOPERao\"; // Replace with your Pexels API key\n\nconst AddItem = ({ addItem }) => {\n  const [itemName, setItemName] = useState(\"\");\n  const [itemAmount, setItemAmount] = useState(\"\"); // State for amount\n  const [images, setImages] = useState([]); // State to hold images\n  const [selectedImage, setSelectedImage] = useState(\"\"); // State for the selected image\n\n  const fetchImages = async (query) => {\n    const response = await fetch(`https://api.pexels.com/v1/search?query=${query}&per_page=10`, {\n      headers: {\n        Authorization: PEXELS_API_KEY,\n      },\n    });\n    const data = await response.json();\n    setImages(data.photos);\n  };\n\n  useEffect(() => {\n    if (itemName) {\n      fetchImages(itemName); // Fetch images when the item name is updated\n    }\n  }, [itemName]);\n\n  const handleAdd = () => {\n    if (itemName.trim() && itemAmount.trim() && selectedImage) {\n      const newItem = { name: itemName, amount: itemAmount, category: \"Uncategorized\", image: selectedImage };\n      addItem(newItem);\n      setItemName(\"\");\n      setItemAmount(\"\"); // Clear after adding\n      setSelectedImage(\"\"); // Clear selected image\n      setImages([]); // Clear images\n    }\n  };\n\n  return (\n    <div className=\"add-item\">\n      <TextField\n        variant=\"outlined\"\n        label=\"Add item to pantry\"\n        value={itemName}\n        onChange={(e) => setItemName(e.target.value)}\n        style={{ marginRight: \"10px\" }}\n      />\n      <TextField\n        variant=\"outlined\"\n        label=\"Amount\"\n        value={itemAmount}\n        onChange={(e) => setItemAmount(e.target.value)}\n        style={{ marginRight: \"10px\" }}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleAdd}>\n        Add\n      </Button>\n\n      <Typography variant=\"h6\" style={{ marginTop: \"20px\" }}>\n        Select an Image\n      </Typography>\n      <Grid container spacing={2}>\n        {images.map((image) => (\n          <Grid item xs={4} key={image.id}>\n            <img\n              src={image.src.small}\n              alt={image.alt}\n              style={{ cursor: \"pointer\", width: \"100%\", borderRadius: \"8px\", border: selectedImage === image.src.small ? '2px solid blue' : 'none' }}\n              onClick={() => setSelectedImage(image.src.small)}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default AddItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}