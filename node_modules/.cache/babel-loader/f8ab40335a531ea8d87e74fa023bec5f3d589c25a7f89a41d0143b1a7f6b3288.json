{"ast":null,"code":"var _jsxFileName = \"/home/majid/smart-pantry/src/components/Pantry/Pantry.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography } from \"@mui/material\";\nimport AddItem from \"./AddItem\";\nimport ItemList from \"./ItemList\";\nimport RecipeSuggestions from \"../RecipeSuggestions/RecipeSuggestions\";\nimport \"./Pantry.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pantry = () => {\n  _s();\n  const [items, setItems] = useState([]);\n\n  // Fetch items from the backend when the component mounts\n  useEffect(() => {\n    console.log(\"Fetching items from http://localhost:5000/pantry...\");\n    fetch(\"http://localhost:5000/pantry\").then(response => {\n      console.log(\"Response:\", response); // Check if response is received\n      return response.json();\n    }).then(data => {\n      console.log(\"Fetched pantry items:\", data); // Log fetched data\n      setItems(data);\n    }).catch(error => console.error(\"Error fetching pantry items:\", error));\n  }, []);\n\n  // Add a new item to the pantry and update the backend\n  const addItem = item => {\n    fetch(\"http://localhost:5000/pantry\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(item)\n    }).then(response => response.json()).then(newItem => setItems([...items, newItem])).catch(error => console.error(\"Error adding pantry item:\", error));\n  };\n\n  // Extract only the item names for the recommendation engine\n  const pantryItems = items.map(item => item.name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pantry-container\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Pantry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddItem, {\n      addItem: addItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemList, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipeSuggestions, {\n      pantryItems: pantryItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Pantry, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = Pantry;\nexport default Pantry;\nvar _c;\n$RefreshReg$(_c, \"Pantry\");","map":{"version":3,"names":["React","useState","useEffect","Typography","AddItem","ItemList","RecipeSuggestions","jsxDEV","_jsxDEV","Pantry","_s","items","setItems","console","log","fetch","then","response","json","data","catch","error","addItem","item","method","headers","body","JSON","stringify","newItem","pantryItems","map","name","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/majid/smart-pantry/src/components/Pantry/Pantry.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Typography } from \"@mui/material\";\nimport AddItem from \"./AddItem\";\nimport ItemList from \"./ItemList\";\nimport RecipeSuggestions from \"../RecipeSuggestions/RecipeSuggestions\";\nimport \"./Pantry.css\";\n\nconst Pantry = () => {\n  const [items, setItems] = useState([]);\n\n  // Fetch items from the backend when the component mounts\n  useEffect(() => {\n    console.log(\"Fetching items from http://localhost:5000/pantry...\");\n    fetch(\"http://localhost:5000/pantry\")\n      .then((response) => {\n        console.log(\"Response:\", response);  // Check if response is received\n        return response.json();\n      })\n      .then((data) => {\n        console.log(\"Fetched pantry items:\", data);  // Log fetched data\n        setItems(data);\n      })\n      .catch((error) => console.error(\"Error fetching pantry items:\", error));\n  }, []);\n\n  // Add a new item to the pantry and update the backend\n  const addItem = (item) => {\n    fetch(\"http://localhost:5000/pantry\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(item),\n    })\n      .then((response) => response.json())\n      .then((newItem) => setItems([...items, newItem]))\n      .catch((error) => console.error(\"Error adding pantry item:\", error));\n  };\n\n  // Extract only the item names for the recommendation engine\n  const pantryItems = items.map((item) => item.name);\n\n  return (\n    <div className=\"pantry-container\">\n      <Typography variant=\"h5\" gutterBottom>\n        Pantry\n      </Typography>\n      <AddItem addItem={addItem} />\n      <ItemList items={items} />\n      <RecipeSuggestions pantryItems={pantryItems} />\n    </div>\n  );\n};\n\nexport default Pantry;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,iBAAiB,MAAM,wCAAwC;AACtE,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;IAClEC,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAAEC,QAAQ,IAAK;MAClBJ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEG,QAAQ,CAAC,CAAC,CAAE;MACrC,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACdN,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEK,IAAI,CAAC,CAAC,CAAE;MAC7CP,QAAQ,CAACO,IAAI,CAAC;IAChB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKR,OAAO,CAACQ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;EAC3E,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,OAAO,GAAIC,IAAI,IAAK;IACxBR,KAAK,CAAC,8BAA8B,EAAE;MACpCS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC,CACCP,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEa,OAAO,IAAKjB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEkB,OAAO,CAAC,CAAC,CAAC,CAChDT,KAAK,CAAEC,KAAK,IAAKR,OAAO,CAACQ,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC;;EAED;EACA,MAAMS,WAAW,GAAGnB,KAAK,CAACoB,GAAG,CAAER,IAAI,IAAKA,IAAI,CAACS,IAAI,CAAC;EAElD,oBACExB,OAAA;IAAKyB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/B1B,OAAA,CAACL,UAAU;MAACgC,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbhC,OAAA,CAACJ,OAAO;MAACkB,OAAO,EAAEA;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7BhC,OAAA,CAACH,QAAQ;MAACM,KAAK,EAAEA;IAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1BhC,OAAA,CAACF,iBAAiB;MAACwB,WAAW,EAAEA;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA3CID,MAAM;AAAAgC,EAAA,GAANhC,MAAM;AA6CZ,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}