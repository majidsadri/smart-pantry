{"ast":null,"code":"var _jsxFileName = \"/home/majid/smart-pantry/src/components/RecipeSuggestions/RecipeSuggestions.js\";\nimport React from \"react\";\nimport { Typography, List, ListItem, ListItemText } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeSuggestions = ({\n  pantryItems\n}) => {\n  // Debugging log to see the value of pantryItems\n  console.log(\"Pantry items in RecipeSuggestions component:\", pantryItems);\n\n  // Ensure pantryItems is a valid array before using it\n  if (!Array.isArray(pantryItems)) {\n    console.error(\"pantryItems is not an array or is undefined:\", pantryItems);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Recipe Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No valid pantry items available for suggestions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Recipe Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), pantryItems.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n      children: pantryItems.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `Suggested recipe for: ${item}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No recipe suggestions available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = RecipeSuggestions;\nexport default RecipeSuggestions;\nvar _c;\n$RefreshReg$(_c, \"RecipeSuggestions\");","map":{"version":3,"names":["React","Typography","List","ListItem","ListItemText","jsxDEV","_jsxDEV","RecipeSuggestions","pantryItems","console","log","Array","isArray","error","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","index","primary","_c","$RefreshReg$"],"sources":["/home/majid/smart-pantry/src/components/RecipeSuggestions/RecipeSuggestions.js"],"sourcesContent":["import React from \"react\";\nimport { Typography, List, ListItem, ListItemText } from \"@mui/material\";\n\nconst RecipeSuggestions = ({ pantryItems }) => {\n  // Debugging log to see the value of pantryItems\n  console.log(\"Pantry items in RecipeSuggestions component:\", pantryItems);\n\n  // Ensure pantryItems is a valid array before using it\n  if (!Array.isArray(pantryItems)) {\n    console.error(\"pantryItems is not an array or is undefined:\", pantryItems);\n    return (\n      <div>\n        <Typography variant=\"h5\">Recipe Suggestions</Typography>\n        <Typography>No valid pantry items available for suggestions.</Typography>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Typography variant=\"h5\">Recipe Suggestions</Typography>\n      {pantryItems.length > 0 ? (\n        <List>\n          {pantryItems.map((item, index) => (\n            <ListItem key={index}>\n              <ListItemText primary={`Suggested recipe for: ${item}`} />\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <Typography>No recipe suggestions available.</Typography>\n      )}\n    </div>\n  );\n};\n\nexport default RecipeSuggestions;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAC7C;EACAC,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAEF,WAAW,CAAC;;EAExE;EACA,IAAI,CAACG,KAAK,CAACC,OAAO,CAACJ,WAAW,CAAC,EAAE;IAC/BC,OAAO,CAACI,KAAK,CAAC,8CAA8C,EAAEL,WAAW,CAAC;IAC1E,oBACEF,OAAA;MAAAQ,QAAA,gBACER,OAAA,CAACL,UAAU;QAACc,OAAO,EAAC,IAAI;QAAAD,QAAA,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACxDb,OAAA,CAACL,UAAU;QAAAa,QAAA,EAAC;MAAgD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC;EAEV;EAEA,oBACEb,OAAA;IAAAQ,QAAA,gBACER,OAAA,CAACL,UAAU;MAACc,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EACvDX,WAAW,CAACY,MAAM,GAAG,CAAC,gBACrBd,OAAA,CAACJ,IAAI;MAAAY,QAAA,EACFN,WAAW,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3BjB,OAAA,CAACH,QAAQ;QAAAW,QAAA,eACPR,OAAA,CAACF,YAAY;UAACoB,OAAO,EAAE,yBAAyBF,IAAI;QAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAD7CI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,gBAEPb,OAAA,CAACL,UAAU;MAAAa,QAAA,EAAC;IAAgC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CACzD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACM,EAAA,GA/BIlB,iBAAiB;AAiCvB,eAAeA,iBAAiB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}