{"ast":null,"code":"var _jsxFileName = \"/home/majid/smart-pantry/src/components/RecipeSuggestions/RecipeSuggestions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Typography, CircularProgress, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeSuggestions = ({\n  pantryItems,\n  dietPreferences\n}) => {\n  _s();\n  const [recipes, setRecipes] = useState([]); // Store all the recipes\n  const [currentRecipeIndex, setCurrentRecipeIndex] = useState(0); // Track current recipe\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\"); // To store any error message\n\n  const fetchSuggestions = (pantryItems, dietPreferences) => {\n    setLoading(true);\n    setError(\"\"); // Reset any previous error message\n\n    fetch(\"http://127.0.0.1:5001/recommend\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        pantry: pantryItems,\n        diet: dietPreferences.diet,\n        restrictions: dietPreferences.restrictions\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      if (data.suggestions && data.suggestions.length > 0) {\n        setRecipes(data.suggestions);\n        setCurrentRecipeIndex(0); // Reset to the first recipe when new data arrives\n      } else {\n        setError(\"No recipe suggestions available.\");\n      }\n    }).catch(error => {\n      console.error(\"Error fetching recipe suggestions:\", error);\n      setError(\"Error generating suggestions.\");\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  const handleDislike = () => {\n    if (currentRecipeIndex < recipes.length - 1) {\n      setCurrentRecipeIndex(currentRecipeIndex + 1);\n    } else {\n      alert(\"No more recipes to show.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Recipe Suggestions from ChatGPT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : recipes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          fontWeight: \"bold\",\n          color: \"#3f51b5\"\n        },\n        children: [recipes[currentRecipeIndex].title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          whiteSpace: \"pre-line\",\n          marginTop: \"10px\"\n        },\n        children: [recipes[currentRecipeIndex].instructions, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleDislike,\n          children: \"Dislike\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No recipe suggestions available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeSuggestions, \"WdNbyyiMywxNI8gduLGM2xxkbv0=\");\n_c = RecipeSuggestions;\nexport default RecipeSuggestions;\nvar _c;\n$RefreshReg$(_c, \"RecipeSuggestions\");","map":{"version":3,"names":["React","useEffect","useState","Typography","CircularProgress","Button","jsxDEV","_jsxDEV","RecipeSuggestions","pantryItems","dietPreferences","_s","recipes","setRecipes","currentRecipeIndex","setCurrentRecipeIndex","loading","setLoading","error","setError","fetchSuggestions","fetch","method","headers","body","JSON","stringify","pantry","diet","restrictions","then","response","ok","Error","status","json","data","suggestions","length","catch","console","finally","handleDislike","alert","style","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","color","fontWeight","title","whiteSpace","instructions","onClick","_c","$RefreshReg$"],"sources":["/home/majid/smart-pantry/src/components/RecipeSuggestions/RecipeSuggestions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Typography, CircularProgress, Button } from \"@mui/material\";\n\nconst RecipeSuggestions = ({ pantryItems, dietPreferences }) => {\n  const [recipes, setRecipes] = useState([]); // Store all the recipes\n  const [currentRecipeIndex, setCurrentRecipeIndex] = useState(0); // Track current recipe\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\"); // To store any error message\n\n  const fetchSuggestions = (pantryItems, dietPreferences) => {\n    setLoading(true);\n    setError(\"\");  // Reset any previous error message\n\n    fetch(\"http://127.0.0.1:5001/recommend\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        pantry: pantryItems,\n        diet: dietPreferences.diet,\n        restrictions: dietPreferences.restrictions,\n      }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        if (data.suggestions && data.suggestions.length > 0) {\n          setRecipes(data.suggestions);\n          setCurrentRecipeIndex(0); // Reset to the first recipe when new data arrives\n        } else {\n          setError(\"No recipe suggestions available.\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching recipe suggestions:\", error);\n        setError(\"Error generating suggestions.\");\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const handleDislike = () => {\n    if (currentRecipeIndex < recipes.length - 1) {\n      setCurrentRecipeIndex(currentRecipeIndex + 1);\n    } else {\n      alert(\"No more recipes to show.\");\n    }\n  };\n\n  return (\n    <div style={{ marginTop: \"20px\" }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Recipe Suggestions from ChatGPT\n      </Typography>\n\n      {loading ? (\n        <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n          <CircularProgress />\n        </div>\n      ) : error ? (\n        <Typography color=\"error\">{error}</Typography>\n      ) : recipes.length > 0 ? (\n        <div>\n          <Typography variant=\"h6\" style={{ fontWeight: \"bold\", color: \"#3f51b5\" }}>\n            {recipes[currentRecipeIndex].title} {/* Bold and styled title */}\n          </Typography>\n          <Typography variant=\"body1\" style={{ whiteSpace: \"pre-line\", marginTop: \"10px\" }}>\n            {recipes[currentRecipeIndex].instructions} {/* Instructions displayed normally */}\n          </Typography>\n          <div style={{ marginTop: \"20px\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleDislike}>Dislike</Button>\n          </div>\n        </div>\n      ) : (\n        <Typography>No recipe suggestions available.</Typography>\n      )}\n    </div>\n  );\n};\n\n\nexport default RecipeSuggestions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}